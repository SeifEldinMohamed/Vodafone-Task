package com.example.data.repository.trending

import com.example.data.data_sources.remote.dto.trending_repositories.Item
import com.example.data.data_sources.remote.dto.trending_repositories.License
import com.example.data.data_sources.remote.dto.trending_repositories.Owner
import com.example.data.data_sources.remote.dto.trending_repositories.TrendingGithubDataModel


private val fakeOwner = Owner(
    avatarUrl = "https://fakeurl.com/avatar.png",
    eventsUrl = "https://fakeurl.com/events",
    followersUrl = "https://fakeurl.com/followers",
    followingUrl = "https://fakeurl.com/following",
    gistsUrl = "https://fakeurl.com/gists",
    gravatarId = "fake_gravatar_id",
    htmlUrl = "https://fakeurl.com/html",
    id = 123,
    login = "Seif",
    nodeId = "fake_node_id",
    organizationsUrl = "https://fakeurl.com/organizations",
    receivedEventsUrl = "https://fakeurl.com/received_events",
    reposUrl = "https://fakeurl.com/repos",
    siteAdmin = true,
    starredUrl = "https://fakeurl.com/starred",
    subscriptionsUrl = "https://fakeurl.com/subscriptions",
    type = "User",
    url = "https://fakeurl.com/user"
)

private val fakeLicense = License(
    key = "fake_key",
    name = "Fake License",
    nodeId = "fake_node_id",
    spdxId = "fake_spdx_id",
    url = "https://fakeurl.com/license"
)

private val fakeItem = Item(
    allowForking = true,
    archiveUrl = "https://fakeurl.com/archive",
    archived = false,
    assigneesUrl = "https://fakeurl.com/assignees",
    blobsUrl = "https://fakeurl.com/blobs",
    branchesUrl = "https://fakeurl.com/branches",
    cloneUrl = "https://fakeurl.com/clone",
    collaboratorsUrl = "https://fakeurl.com/collaborators",
    commentsUrl = "https://fakeurl.com/comments",
    commitsUrl = "https://fakeurl.com/commits",
    compareUrl = "https://fakeurl.com/compare",
    contentsUrl = "https://fakeurl.com/contents",
    contributorsUrl = "https://fakeurl.com/contributors",
    createdAt = "2023-06-15T12:00:00Z",
    defaultBranch = "main",
    deploymentsUrl = "https://fakeurl.com/deployments",
    description = "This is a fake repository.",
    disabled = false,
    downloadsUrl = "https://fakeurl.com/downloads",
    eventsUrl = "https://fakeurl.com/events",
    fork = false,
    forksCount = 10,
    forks = 10,
    forksUrl = "https://fakeurl.com/forks",
    fullName = "fakeuser/fakerepo",
    gitCommitsUrl = "https://fakeurl.com/git/commits",
    gitRefsUrl = "https://fakeurl.com/git/refs",
    gitTagsUrl = "https://fakeurl.com/git/tags",
    gitUrl = "https://fakeurl.com/git",
    hasDiscussions = true,
    hasDownloads = true,
    hasIssues = true,
    hasPages = true,
    hasProjects = true,
    hasWiki = true,
    homepage = "https://fakeurl.com/homepage",
    hooksUrl = "https://fakeurl.com/hooks",
    htmlUrl = "https://fakeurl.com/repo",
    id = 12345,
    isTemplate = false,
    issueCommentUrl = "https://fakeurl.com/issues/comments",
    issueEventsUrl = "https://fakeurl.com/issues/events",
    issuesUrl = "https://fakeurl.com/issues",
    keysUrl = "https://fakeurl.com/keys",
    labelsUrl = "https://fakeurl.com/labels",
    language = "Kotlin",
    languagesUrl = "https://fakeurl.com/languages",
    license = fakeLicense,
    owner = fakeOwner,
    pullsUrl = "https://fakeurl.com/pulls",
    pushedAt = "2023-06-15T12:00:00Z",
    releasesUrl = "https://fakeurl.com/releases",
    score = 100,
    size = 1000,
    sshUrl = "fake_ssh_url",
    stargazersCount = 50,
    stargazersUrl = "https://fakeurl.com/stargazers",
    statusesUrl = "https://fakeurl.com/statuses",
    subscribersUrl = "https://fakeurl.com/subscribers",
    subscriptionUrl = "https://fakeurl.com/subscription",
    svnUrl = "https://fakeurl.com/svn",
    tagsUrl = "https://fakeurl.com/tags",
    teamsUrl = "https://fakeurl.com/teams",
    topics = listOf("android", "compose", "fake"),
    treesUrl = "https://fakeurl.com/trees",
    updatedAt = "2023-06-15T12:00:00Z",
    url = "https://fakeurl.com/repo",
    visibility = "public",
    watchers = 20,
    watchersCount = 20,
    webCommitSignOffRequired = false,
    mergesUrl = "https://fakeurl.com/merges",
    milestonesUrl = "https://fakeurl.com/milestone",
    mirrorUrl = "https://fakeurl.com/mirror",
    name = "seif",
    nodeId = "1",
    notificationsUrl = "https://fakeurl.com/notification",
    openIssues = 5,
    openIssuesCount = 100,
    isPrivate = true
)

val fakeTrendingGithubDataModel = TrendingGithubDataModel(
    incompleteResults = false,
    items = listOf(fakeItem),
    totalCount = 1
)

private val fakeItem2 = Item(
    allowForking = true,
    archiveUrl = "https://fakeurl.com/archive",
    archived = false,
    assigneesUrl = "https://fakeurl.com/assignees",
    blobsUrl = "https://fakeurl.com/blobs",
    branchesUrl = "https://fakeurl.com/branches",
    cloneUrl = "https://fakeurl.com/clone",
    collaboratorsUrl = "https://fakeurl.com/collaborators",
    commentsUrl = "https://fakeurl.com/comments",
    commitsUrl = "https://fakeurl.com/commits",
    compareUrl = "https://fakeurl.com/compare",
    contentsUrl = "https://fakeurl.com/contents",
    contributorsUrl = "https://fakeurl.com/contributors",
    createdAt = "2023-06-15T12:00:00Z",
    defaultBranch = "main",
    deploymentsUrl = "https://fakeurl.com/deployments",
    description = "This is a fake repository.",
    disabled = false,
    downloadsUrl = "https://fakeurl.com/downloads",
    eventsUrl = "https://fakeurl.com/events",
    fork = false,
    forksCount = 10,
    forks = 10,
    forksUrl = "https://fakeurl.com/forks",
    fullName = "fakeuser/fakerepo",
    gitCommitsUrl = "https://fakeurl.com/git/commits",
    gitRefsUrl = "https://fakeurl.com/git/refs",
    gitTagsUrl = "https://fakeurl.com/git/tags",
    gitUrl = "https://fakeurl.com/git",
    hasDiscussions = true,
    hasDownloads = true,
    hasIssues = true,
    hasPages = true,
    hasProjects = true,
    hasWiki = true,
    homepage = "https://fakeurl.com/homepage",
    hooksUrl = "https://fakeurl.com/hooks",
    htmlUrl = "https://fakeurl.com/repo",
    id = 12345,
    isTemplate = false,
    issueCommentUrl = "https://fakeurl.com/issues/comments",
    issueEventsUrl = "https://fakeurl.com/issues/events",
    issuesUrl = "https://fakeurl.com/issues",
    keysUrl = "https://fakeurl.com/keys",
    labelsUrl = "https://fakeurl.com/labels",
    language = null,
    languagesUrl = "https://fakeurl.com/languages",
    license = fakeLicense,
    owner = fakeOwner,
    pullsUrl = "https://fakeurl.com/pulls",
    pushedAt = "2023-06-15T12:00:00Z",
    releasesUrl = "https://fakeurl.com/releases",
    score = 100,
    size = 1000,
    sshUrl = "fake_ssh_url",
    stargazersCount = 50,
    stargazersUrl = "https://fakeurl.com/stargazers",
    statusesUrl = "https://fakeurl.com/statuses",
    subscribersUrl = "https://fakeurl.com/subscribers",
    subscriptionUrl = "https://fakeurl.com/subscription",
    svnUrl = "https://fakeurl.com/svn",
    tagsUrl = "https://fakeurl.com/tags",
    teamsUrl = "https://fakeurl.com/teams",
    topics = listOf("android", "compose", "fake"),
    treesUrl = "https://fakeurl.com/trees",
    updatedAt = "2023-06-15T12:00:00Z",
    url = "https://fakeurl.com/repo",
    visibility = "public",
    watchers = 20,
    watchersCount = 20,
    webCommitSignOffRequired = false,
    mergesUrl = "https://fakeurl.com/merges",
    milestonesUrl = "https://fakeurl.com/milestone",
    mirrorUrl = "https://fakeurl.com/mirror",
    name = "seif",
    nodeId = "1",
    notificationsUrl = "https://fakeurl.com/notification",
    openIssues = 5,
    openIssuesCount = 100,
    isPrivate = true
)

val fakeTrendingGithubDataModel2 = TrendingGithubDataModel(
    incompleteResults = false,
    items = listOf(fakeItem2),
    totalCount = 1
)